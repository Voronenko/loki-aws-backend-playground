# https://grafana.com/docs/loki/latest/configuration/
# You can use environment variable references in the configuration file to set values that need to be configurable during deployment.
# To do this, pass -config.expand-env=true and use:
# ${VAR:-DEFAULTVALUE}


# https://grafana.com/docs/loki/latest/configuration/examples/

# Enables authentication through the X-Scope-OrgID header, which must be present
# if true. If false, the OrgID will always be set to "fake"
auth_enabled: false

server:
  http_listen_port: 3100 # HTTP server listen port # CLI flag: -server.http-listen-port
  grpc_listen_port: 9095 # gRPC server listen port # CLI flag: -server.grpc-listen-po
  grpc_server_max_recv_msg_size: 15728640 # Max gRPC message size that can be received # CLI flag: -server.grpc-max-recv-msg-size-bytes default = 4194304
  grpc_server_max_send_msg_size: 15728640 # Max gRPC message size that can be sent # CLI flag: -server.grpc-max-recv-msg-size-bytes

ingester:
  lifecycler:
    address: 127.0.0.1
    ring:
      kvstore:
        store: inmemory
      replication_factor: 1
# How long chunks should sit in-memory with no updates before
# being flushed if they don't hit the max block size. This means
# that half-empty chunks will still be flushed after a certain
# period as long as they receive no further activity.
# CLI flag: -ingester.chunks-idle-period
# default = 30 min
  chunk_idle_period: 5m #15m
# How long chunks should be retained in-memory after they've been flushed.
# CLI flag: -ingester.chunks-retain-period
# default = 15m
  chunk_retain_period: 30s
# A target _compressed_ size in bytes for chunks.
# This is a desired size not an exact size, chunks may be slightly bigger
# or significantly smaller if they get flushed for other reasons (e.g. chunk_idle_period)
# The default value of 0 for this will create chunks with a fixed 10 blocks,
# A non zero value will create chunks with a variable number of blocks to meet the target size.
# CLI flag: -ingester.chunk-target-size
  chunk_target_size: 1536000
# The targeted _uncompressed_ size in bytes of a chunk block
# When this threshold is exceeded the head block will be cut and compressed inside the chunk.
# CLI flag: -ingester.chunks-block-size
  chunk_block_size : 1048576 # The maximum size in bytes a chunk can be before it should be flushed
# Number of times to try and transfer chunks when leaving before
# falling back to flushing to the store. Zero = no transfers are done.
# CLI flag: -ingester.max-transfer-retries
  max_transfer_retries: 0
# The maximum duration of a timeseries chunk in memory. If a timeseries runs for longer than this the current chunk will be flushed to the store and a new chunk created.
# CLI flag: -ingester.max-chunk-age , default 1h
  max_chunk_age: 5m  #20m

# # This component periodically compacts index shards to more performant forms.
# # Retention through the Compactor is experimental.
# Needed if we are using boltdb-shipper

compactor:
  working_directory: /data/retention
  shared_store: s3
  compaction_interval: 10m
  retention_enabled: true
  retention_delete_delay: 2h
  retention_delete_worker_count: 150

schema_config:
  configs:
  # - from: 2019-06-01
  #   store: boltdb
  #   object_store: filesystem
  #   schema: v11
  #   index:
  #     prefix: index_
  #     period: 168h
  - from: 2021-09-22
    store: boltdb-shipper
    object_store: s3
    schema: v11
    index:
      prefix: loki_index_
      # invalid schema config: boltdb-shipper works best with 24h periodic index config.
      # Either add a new config with future date set to 24h to retain the existing index or change the existing config to use 24h period
      period: 24h
      # tags:
      #   Environment: loki-int

storage_config:
  # boltdb:
  #   directory: /data/loki/index
  filesystem:
    directory: /data/loki/chunks
  boltdb_shipper:
    active_index_directory: /data/loki/index
    shared_store: s3
    cache_location: /loki/index_cache
    resync_interval: 5s

  # Configures storing chunks in AWS. Required options only required when aws is
  # present.
  aws:
    # S3 or S3-compatible endpoint URL with escaped Key and Secret encoded.
    # If only region is specified as a host, the proper endpoint will be deduced.
    # Use inmemory:///<bucket-name> to use a mock in-memory implementation.
    # CLI flag: -s3.url
    # s3: s3://chunks
    s3: http://user:password@minio.:9000/chunks  # HACK! # The period behind the domain forces the S3 library to use it as a host name, not as an AWS region.

  #  # S3 Endpoint to connect to.
  #  # CLI flag: -s3.endpoint
  #  [endpoint: <string> | default = ""]
    endpoint: http://minio.:9000

  # # AWS region to use.
  # # CLI flag: -s3.region
  # [region: <string> | default = ""]

  # # AWS Access Key ID.
  # # CLI flag: -s3.access-key-id
  # [access_key_id: <string> | default = ""]
  #  access_key_id: user  # consider instance profile for real use

  # # AWS Secret Access Key.
  # # CLI flag: -s3.secret-access-key
  # [secret_access_key: <string> | default = ""]
  #  secret_access_key: password # consider instance profile for real use

    s3forcepathstyle: true
    insecure: true # remove for real s3
    # signature_version: s3v4 # for minio only, remove for real s3

#     dynamodb:

#         # URL for DynamoDB with escaped Key and Secret encoded. If only region is specified as a
#         # host, the proper endpoint will be deduced. Use inmemory:///<bucket-name> to
#         # use a mock in-memory implementation.
#         # CLI flag: -dynamodb.url
# # #      dynamodb_url: dynamodb://access_key:secret_access_key@region
#       dynamodb_url: dynamodb://user:password@dynamodb.local.:8000

# Configuring the retention period
# Retention period is configured within the limits_config configuration section.
#There are two ways of setting retention policies:
#retention_period which is applied globally.
#retention_stream which is only applied to chunks matching the selector

# https://grafana.com/docs/loki/latest/operations/storage/retention/

limits_config:
  enforce_metric_name: false
  reject_old_samples: true
  reject_old_samples_max_age: 168h
  # ingestion_rate_mb: 30
  # ingestion_burst_size_mb: 30
  # max_streams_per_user: 1000000

chunk_store_config:
  # keep in sync with table_manager->retention_period
  # Loki requires that retention (2520h below) is divisible by the duration of each index table (168h by default)
  max_look_back_period: 2520h

table_manager:
  # keep in sync with chunk_store_config->max_query_lookback
  retention_period: 2520h
  retention_deletes_enabled: true
  poll_interval: 24


ruler:
  storage:
    type: local
    local:
      directory: /tmp/loki/rules
#   storage:
#     type: s3
#     s3:
# #      s3: s3://region/test-grafana-loki
#        s3: http://user:password@minio.:9000/loki_ruler
#        insecure: true
  rule_path: /etc/loki/rules
  alertmanager_url: http://localhost:9093
  ring:
    kvstore:
      store: inmemory
  enable_api: true
